# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: push

jobs:
  Compile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Compile with Gradle
      run: ./gradlew compileJava 

  Test:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test with Gradle
      run: ./gradlew test 
    
    - uses: actions/upload-artifact@v2
      with:
        name: testReport
        path: build/reports/tests/test

  Assemble:
    runs-on: ubuntu-latest
    needs: [Compile, Test]
    outputs:
      filename: ${{ steps.step1.outputs.filename }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Assemble with Gradle
      run: ./gradlew assemble 

    - uses: actions/upload-artifact@v2
      with:
        name: buildJar
        path: build/libs/*.jar

    - name: Get jar name
      id: step1
      run: echo "::set-output name=filename::`ls | grep .jar`"

  Release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [Compile, Test, Assemble]
    env:
      FILE_NAME: ${{needs.Assemble.outputs.filename}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: test
        run: echo `ls`

      - uses: actions/download-artifact@v2
        with:
          name: buildJar
          path: ${{ env.FILE_NAME }}
          
      - name: test2
        run: echo `ls`

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.FILE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}